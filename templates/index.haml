:css
  #json {
    margin-bottom: 10px;
  }

  #method_select {
    width: 6em;
    margin-right: 10px;
  }

%form.form.well{:method => :post}
  .form-inline
    %input.input-xlarge{:id => "username", :name => "username", :placeholder => "username", :value => params["username"]}
    %input.input-xlarge{:id => "password", :name => "password", :placeholder => "password / token", :type => "password", :value => params["password"]}

  %br

  #path.inline
    %select#method_select{:name => "method"}
      - %w{GET POST PUT DELETE}.each do |method|
        %option{:value => method, :selected => @method == method.downcase.to_sym}= method

    %span.bold
      https://
    %input{:name => "url", :type => "text", :value => params["url"], :placeholder => "subdomain"}
    %span.bold
      \.zendesk.com/api/v2/

    %input{:name => "path", :type => "text", :value => @path, :placeholder => "path"}

    %span.bold
      \.json

    %p#error

  #input
    %textarea#json.hide{:name => "json"}
      { "": "" }
    #params
      - @get_params.each do |param|
        = haml :param, :locals => { :param => param }

    %button.btn#add-param
      Add URL Parameter

  %button.btn.btn-primary{:type => :submit}
    Submit

- if @error
  .error
    %p= @error

.response
  - if @html_request && @html_response
    %ul.nav.nav-pills.well
      %li.active
        %a.tab_link#request{:href => "#"}
          Request
      %li
        %a.tab_link#response{:href => "#"}
          Response

  - if @html_request
    #request_tab.code.tab
      %pre= @html_request

  - if @html_response
    #response_tab.code.tab.hide
      %pre= @html_response

:javascript
  $('.tab_link').click(function() {
    var elem = $(this);

    $('.tab').hide();
    $('ul.nav-pills li').removeClass('active');

    $('#' + this.id + '_tab').show();
    elem.parent('li').addClass('active');
  });

  $('#json').keydown(function() {
    $('#error').html('');
  });

  $('#json').keyup(function() {
    var value = $('#json').val();

    if(value == '')
      return;

    try {
      JSON.parse(value);
    } catch(e) {
      $('#error').html("There was an error with your JSON syntax. " + e.message);
    }
  });

  function toggle_json() {
    var method = $("#method_select option:selected").val();
    $("#json").toggle(method == "POST" || method == "PUT");
  }

  $("#method_select").change(toggle_json);

  function toggle_sub_resource(selected) {
    var sub_resource = $('select#sub_resource_' + selected.val());

    if(sub_resource.length > 0) {
      $('#sub_resource').show();
      $('.sub_resource').hide();
      sub_resource.show();
    } else {
      $('#sub_resource').hide();
    }
  }

  function toggle_readable(selected) {
    if(selected.hasClass("readable")) {
      $('#resource_id').show();
    } else {
      $('#resource_id').hide();
    }
  }

  var param_html = #{haml(:param, :locals => { :param => {} }).to_json}

  $("#add-param").click(function(event) {
    event.preventDefault();
    $("#params").append(param_html);
  });

  $(".remove-param").live("click", function(event) {
    event.preventDefault();
    $(this).parent("div").remove();
  });

  $(document).ready(function() {
    var selected = $('#resource option:selected');
    toggle_sub_resource(selected);
    toggle_readable(selected);

    toggle_json();
  });

  $('#resource').change(function() {
    var selected = $('#resource option:selected');
    toggle_sub_resource(selected);
    toggle_readable(selected);
  });
